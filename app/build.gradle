apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.google.protobuf'
//apply plugin: 'com.google.gms.google-services' // Google Services plugin
//apply plugin: 'com.google.firebase.crashlytics'
//apply plugin: 'com.huawei.agconnect'

//def getGitCommitHash = { ->
//    def stdout = new ByteArrayOutputStream()
//    exec {
//        commandLine 'git', 'rev-parse', '--short', 'HEAD'
//        standardOutput = stdout
//    }
//    return stdout.toString().trim()
//}

def getGitTagName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (Exception ignored) {
        return "v1.0.0"
    }
}

def getGitCommitCount = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--count', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim().toInteger()
    } catch (Exception ignored) {
        return 1 // 默认提交计数
    }
}

// 动态生成版本号
def buildVersion = getGitCommitCount()
def version = getGitTagName()
if (System.getenv("CI_BUILD_NUMBER") != null) { // 兼容 CI/CD
    buildVersion = System.getenv("CI_BUILD_NUMBER").toInteger()
}

// if(System.getenv("GIT_COMMIT_HASH")!=null){
//     version = getGitTagName()+"-"+System.getenv("GIT_COMMIT_HASH")
// }

android {
    compileSdk 36
    namespace "com.xyrlsz.xcimoc"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    defaultConfig {
        applicationId "com.xyrlsz.xcimoc"
        minSdkVersion 21
        targetSdkVersion 36
        versionCode buildVersion // 动态生成的版本号
        versionName version
        resourceConfigurations += ['en', 'zh']
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "REPOSITORIE_NAME", '"Cimoc"'
        buildConfigField "String", "OWNER_NAME", '"xyrlsz"'
    }

    signingConfigs {
        release {
            storeFile file("../xcimoc.jks")
            storePassword '123456'
            keyAlias 'xc'
            keyPassword '123456'
            enableV1Signing true
            enableV2Signing true
            enableV3Signing true
            enableV4Signing true
        }
        debug {
            storeFile file("../xcimoc.jks")
            storePassword '123456'
            keyAlias 'xc'
            keyPassword '123456'
            enableV1Signing true
            enableV2Signing true
            enableV3Signing true
            enableV4Signing true
        }
    }
    buildFeatures {
        buildConfig true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources true
            signingConfig signingConfigs.release
            buildConfigField "boolean", "USE_FINAL_RESOURCE_IDS", "true"

        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources false
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "USE_FINAL_RESOURCE_IDS", "true"

        }
    }
    splits {
        abi {
            enable true // 启用 ABI 分架构编译
            reset() // 重置所有 ABI 配置
            include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64' // 包含的 ABI 类型
            universalApk true // 是否生成包含所有 ABI 的通用 APK
        }
    }
    lint {
        abortOnError false
        disable 'ResourcePrefix'
    }
    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto' // proto 文件目录
            }
        }
    }
}
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.1' // 使用与依赖相同的版本
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
                kotlin {
                    option "lite"
                }
            }
        }
    }
}

greendao {
    schemaVersion 12
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree("libs")
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.recyclerview:recyclerview:1.4.0'
    implementation 'com.google.android.material:material:1.13.0'
    implementation 'com.jakewharton:butterknife:10.2.3'
    implementation 'androidx.activity:activity-ktx:1.11.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    implementation 'org.greenrobot:greendao:3.3.0'
    implementation 'com.squareup.okhttp3:okhttp:5.1.0'
    // noinspection GradleDependency : fresco 3.0.0 - 3.6.0 似乎有问题 以后再试试3.7以上的版本
    implementation 'com.facebook.fresco:fresco:2.6.0'
    // implementation 'com.facebook.fresco:fresco:3.6.0'
    // implementation 'com.facebook.fresco:middleware:3.6.0'
    // implementation 'com.facebook.fresco:imagepipeline:3.6.0'
    // implementation 'com.facebook.fresco:imagepipeline-okhttp3:3.6.0'

    implementation 'com.facebook.infer.annotation:infer-annotation:0.18.0'
    implementation 'org.jsoup:jsoup:1.21.2'
    implementation 'org.adw.library:discrete-seekbar:1.0.1'
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'io.reactivex:rxandroid:1.2.1'
    api 'com.google.guava:guava:33.5.0-android'

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.code.gson:gson:2.13.2'
    // fastjson 1.2.83 是最后一个支持 Android 4.0 及以下版本的版本
    implementation 'com.alibaba:fastjson:1.2.83'
    implementation "androidx.core:core-ktx:1.17.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.2.0"
//    implementation 'com.google.firebase:firebase-analytics:19.0.0'
//    implementation 'com.google.firebase:firebase-crashlytics:18.1.0'
//    implementation 'com.google.firebase:firebase-config:21.0.0'
    implementation 'com.king.app:app-updater:1.0.8-androidx'
    implementation 'com.king.app:app-dialog:1.0.8-androidx'
//    implementation 'com.iqiyi.xcrash:xcrash-android-lib:3.0.0'
    implementation 'com.github.houbb:opencc4j:1.14.0'
    implementation 'com.github.thegrizzlylabs:sardine-android:0.9'
    implementation 'org.apache.commons:commons-text:1.14.0'
//    implementation "androidx.documentfile:documentfile:1.1.0"

    // protobuf 依赖
    implementation 'com.google.protobuf:protobuf-javalite:4.32.1'
    implementation 'com.google.protobuf:protobuf-kotlin-lite:4.32.1'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'

    // AndroidX Test libraries
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
    androidTestImplementation 'androidx.test:runner:1.7.0'
    androidTestImplementation 'androidx.test:rules:1.7.0'
}

repositories {
    mavenCentral()
}
